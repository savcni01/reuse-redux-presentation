webpackJsonp([39],{1285:function(e,a,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(a,"__esModule",{value:!0}),a.markdown=a.notes=void 0;var n=t(278),s=i(n),o=t(1),r=(i(o),t(526)),d=(a.notes="\n* Nathil me Redux basics\n* Redux Docs site magdir Redux kmo: \n* Predictable (tsafui) state container beshvli lenahel state shel' aplikaciya\n* Emtsa shel redux ze Store...\n* Store mahzik state, meafsher gisha le state, meafsher le state lehitatken be amcaut dispatch shel action\n* Esh shlosha core principles shel' Redux: \n* Single source of trues: cal nitunim shel' app mahzikim/shomrim be-State (tree object) ehad\n* State is read only: ve cal shinuim mufilot al edei Actions \n* State lehitatken rak be amcaut Pure Functions (Reducers)\n* Redux meafsher laavod im View librarim shonim, ve comuvan oved mitsuyan im React.\n* View layer rak merander UI al basis State, kmo she omrim UI ze funkciya mi state.\n",a.markdown="\n### Redux Basics\n* Store: holds application State\n* Actions: object, describe changes to State \n* Reducers: function defined how to transform State\n* View: render UI on base of State\n* Store Middlewares: place for side effects of App\n");a.default=(0,s.default)(r.Slide,{transition:["fade"]},void 0,(0,s.default)(r.Markdown,{},void 0,d))}});