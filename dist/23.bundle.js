webpackJsonp([23],{1293:function(e,n,o){"use strict";function t(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0}),n.markdown=n.notes=void 0;var a=o(278),i=t(a),r=o(1),s=(t(r),o(526)),m={reduxFlow:o(1364)},d=(n.notes="\n* Helek sheni shel React-Redux ze connect\n* Ve po anahnu yaholim lirot dugma eih connect oved\n* Shnei argumentim reshonim shel' connect ze funktsiot: \n* mapStateToProps ve mapDispatchToProps \n* mapStateToProps mekabelet State kmo paramter rishon, ve ownProps ke parametr sheni\n* Ve mahzir object im netunim me a-State, she ihie lemazeg (merged) le props shel TodoItem \n* mapDispatchToProps meafsher leavir dispatch action funktsiot kmo props le TodoItem\n* ve be-toh TodoItem, be-toh event handlers shel TodoItem osim dispatch le Actions a-elu \n* Kmo she omarti kama paamim funktsiya connect mahzira komponenta hadasha she anahnu korim \n* ConnectedComponent or SmartComponent or ReduxContainer. \n\n_TODO:_\n* change image\n* Presentations vs Container\n",n.markdown="\n#### React-Redux Connect\n![React Redux Connect]("+m.reduxFlow.replace("/","")+")\n");n.default=(0,i.default)(s.Slide,{transition:["fade"]},void 0,(0,i.default)(s.Markdown,{},void 0,d))},1364:function(e,n,o){e.exports=o.p+"4abcf082e1504cd8543a0b45e4dd9c52.svg"}});